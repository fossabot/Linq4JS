var Linq4JS;(function(Linq4JS){var Entity=function(){function Entity(_id){this.Id=_id}return Entity}();Linq4JS.Entity=Entity})(Linq4JS||(Linq4JS={})),function(Linq4JS){var OrderEntry=function(){function OrderEntry(_direction,_valueSelector){this.Direction=_direction;this.ValueSelector=_valueSelector}return OrderEntry}(),OrderDirection;Linq4JS.OrderEntry=OrderEntry,function(OrderDirection){OrderDirection[OrderDirection.Ascending=0]="Ascending";OrderDirection[OrderDirection.Descending=1]="Descending"}(Linq4JS.OrderDirection||(Linq4JS.OrderDirection={}));OrderDirection=Linq4JS.OrderDirection}(Linq4JS||(Linq4JS={})),function(Linq4JS){var Helper=function(){function Helper(){}return Helper.ConvertStringFunction=function(functionString){var varname,func;if(functionString.length==0)throw"Linq4JS: Cannot convert empty string to function";if(varname=functionString.substring(0,functionString.indexOf("=>")).replace(" ",""),varname.indexOf(",")!=-1)throw"Linq4JS: Cannot use '"+varname+"' as variable";return func=functionString.substring(functionString.indexOf("=>")+2).split(".match(//gi)").join(""),func="return "+func,Function(varname,func)},Helper.ConvertFunction=function(testFunction){var result;if(typeof testFunction=="function")result=testFunction;else if(typeof testFunction=="string")result=Linq4JS.Helper.ConvertStringFunction(testFunction);else throw"Linq4JS: Cannot use '"+testFunction+"' as function";return result},Helper.OrderCompareFunction=function(valueSelector,a,b,invert){var value_a=valueSelector(a),value_b=valueSelector(b),type=typeof value_a,value_a_string,value_b_string,value_a_number,value_b_number,value_a_bool,value_b_bool;if(type=="string")return value_a_string=value_a,value_a_string=value_a_string.toLowerCase(),value_b_string=value_b,value_b_string=value_b_string.toLowerCase(),value_a_string>value_b_string?invert==!0?-1:1:value_a_string<value_b_string?invert==!0?1:-1:0;if(type=="number")return value_a_number=value_a,value_b_number=value_b,invert==!0?value_b_number-value_a_number:value_a_number-value_b_number;if(type=="boolean")return value_a_bool=value_a,value_b_bool=value_b,value_a_bool==value_b_bool?0:invert==!0?value_a_bool?1:-1:value_a_bool?-1:1;throw"Linq4JS: Cannot map type '"+type+"' for compare\"";},Helper}();Linq4JS.Helper=Helper}(Linq4JS||(Linq4JS={}));Array.prototype.Clone=function(){for(var obj,that=this,newArray=[],_i=0,that_1=that;_i<that_1.length;_i++)obj=that_1[_i],newArray.Add(obj);return newArray};Array.prototype.FindIndex=function(filter){var that=this,filterFunction,i,obj;if(filter!=null){for(filterFunction=Linq4JS.Helper.ConvertFunction(filter),i=0;i<that.length;i++)if(obj=that[i],filter(obj)==!0)return i;return-1}throw"Linq4JS: You must define a filter";};Array.prototype.Get=function(index){var that=this;return that[index]};Array.prototype.ForEach=function(action){for(var obj,that=this,actionFunction=Linq4JS.Helper.ConvertFunction(action),_i=0,that_1=that;_i<that_1.length;_i++)obj=that_1[_i],actionFunction(obj);return that};Array.prototype.Update=function(object,primaryKeySelector){var that=this,targetIndex,selector_1,keys,_i,keys_1,key;if(object==null)throw"Linq4JS: The object cannot be null";if(primaryKeySelector!=null?(selector_1=Linq4JS.Helper.ConvertFunction(primaryKeySelector),targetIndex=that.FindIndex(function(x){return selector_1(x)==selector_1(object)})):targetIndex=object.Id!=null?that.FindIndex(function(x){return x.Id==object.Id}):that.FindIndex(function(x){return x==object}),targetIndex!=-1)for(keys=Object.keys(object),_i=0,keys_1=keys;_i<keys_1.length;_i++)key=keys_1[_i],key!="Id"&&(that[targetIndex][key]=object[key]);else throw"Linq4JS: Nothing found to Update";return that};Array.prototype.UpdateRange=function(objects,primaryKeySelector){var that=this,selector_1;return primaryKeySelector!=null?(selector_1=Linq4JS.Helper.ConvertFunction(primaryKeySelector),objects.ForEach(function(x){that.Update(x,selector_1)})):objects.ForEach(function(x){that.Update(x)}),that};Array.prototype.Remove=function(object,primaryKeySelector){var that=this,targetIndex,selector_1;if(object==null)throw"Linq4JS: The object cannot be null";if(primaryKeySelector!=null?(selector_1=Linq4JS.Helper.ConvertFunction(primaryKeySelector),targetIndex=that.FindIndex(function(x){return selector_1(x)==selector_1(object)})):targetIndex=object.Id!=null?that.FindIndex(function(x){return x.Id==object.Id}):that.FindIndex(function(x){return x==object}),targetIndex!=-1)that.splice(targetIndex,1);else throw"Linq4JS: Nothing found to Remove";return that};Array.prototype.RemoveRange=function(objects,primaryKeySelector){var that=this,selector_1;return primaryKeySelector!=null?(selector_1=Linq4JS.Helper.ConvertFunction(primaryKeySelector),objects.ForEach(function(x){that.Remove(x,selector_1)})):objects.ForEach(function(x){that.Remove(x)}),that};Array.prototype.Add=function(object){var that=this;return object!=null&&that.push(object),that};Array.prototype.AddRange=function(objects){var that=this;return objects.ForEach(function(x){that.Add(x)}),that};Array.prototype.Insert=function(object,index){var that=this;return that.splice(index,0,object),that};Array.prototype.Where=function(filter){var that=this,filterFunction,newArray,i,obj;if(filter!=null){for(filterFunction=Linq4JS.Helper.ConvertFunction(filter),newArray=[],i=0;i<that.length;i++)obj=that[i],filterFunction(obj)==!0&&newArray.push(obj);return newArray}throw"Linq4JS: You must define a filter";};Array.prototype.Range=function(start,length){for(var that=this,newArray=[],i=start;i<start+length;i++)newArray.Add(that.Get(i));return newArray};Array.prototype.Count=function(filter){var that=this;return filter!=null?that.Where(filter).length:that.length};Array.prototype.Any=function(filter){var that=this;return that.Count(filter)>0};Array.prototype.First=function(filter){var that=this,result;if(filter!=null){if(result=that.Where(filter),result.Any())return result.Get(0);throw"Linq4JS: The First Entry was not found";}else{if(that.Any())return that.Get(0);throw"Linq4JS: The First Entry was not found";}};Array.prototype.FirstOrDefault=function(filter){var that=this,result;return filter!=null?(result=that.Where(filter),result.Any()?result.Get(0):null):that.Any()?that.Get(0):null};Array.prototype.Last=function(filter){var that=this,result;if(filter!=null){if(result=that.Where(filter),result.Any())return result.Get(result.length-1);throw"Linq4JS: The Last Entry was not found";}else{if(that.Any())return that.Get(that.length-1);throw"Linq4JS: The Last Entry was not found";}};Array.prototype.LastOrDefault=function(filter){var that=this,result;return filter!=null?(result=that.Where(filter),result.Any()?result.Get(result.length-1):null):that.Any()?that.Get(that.length-1):null};Array.prototype.Select=function(selector){for(var obj,that=this,selectorFunction=Linq4JS.Helper.ConvertFunction(selector),newArray=[],_i=0,that_1=that;_i<that_1.length;_i++)obj=that_1[_i],newArray.Add(selectorFunction(obj));return newArray};Array.prototype.Take=function(count){var that=this;return that.slice(0,count)};Array.prototype.Skip=function(count){var that=this;return that.slice(count,that.Count())};Array.prototype.OrderBy=function(valueSelector){var that=this,valueSelectorFunction=Linq4JS.Helper.ConvertFunction(valueSelector),ordered=that.Clone();return ordered.Order=new Array(new Linq4JS.OrderEntry(Linq4JS.OrderDirection.Ascending,valueSelectorFunction)),ordered.sort(function(a,b){return Linq4JS.Helper.OrderCompareFunction(valueSelectorFunction,a,b,!1)})};Array.prototype.ThenBy=function(valueSelector){var that=this,valueSelectorFunction=Linq4JS.Helper.ConvertFunction(valueSelector),ordered;if(that.Order==null||that.Order.Count()==0)throw"Linq4JS: Please call OrderBy or OrderByDescending before ThenBy";return ordered=that,ordered.Order.Add(new Linq4JS.OrderEntry(Linq4JS.OrderDirection.Ascending,valueSelectorFunction)),ordered.sort(function(a,b){for(var entry,result,_i=0,_a=ordered.Order;_i<_a.length;_i++)if(entry=_a[_i],result=Linq4JS.Helper.OrderCompareFunction(entry.ValueSelector,a,b,entry.Direction==Linq4JS.OrderDirection.Descending),result!=0)return result;return 0})};Array.prototype.OrderByDescending=function(valueSelector){var that=this,valueSelectorFunction=Linq4JS.Helper.ConvertFunction(valueSelector),ordered=that.Clone();return ordered.Order=new Array(new Linq4JS.OrderEntry(Linq4JS.OrderDirection.Descending,valueSelectorFunction)),ordered.sort(function(a,b){return Linq4JS.Helper.OrderCompareFunction(valueSelectorFunction,a,b,!0)})};Array.prototype.ThenByDescending=function(valueSelector){var that=this,valueSelectorFunction=Linq4JS.Helper.ConvertFunction(valueSelector),ordered;if(that.Order==null||that.Order.Count()==0)throw"Linq4JS: Please call OrderBy or OrderByDescending before ThenByDescending";return ordered=that,ordered.Order.Add(new Linq4JS.OrderEntry(Linq4JS.OrderDirection.Descending,valueSelectorFunction)),ordered.sort(function(a,b){for(var entry,result,_i=0,_a=ordered.Order;_i<_a.length;_i++)if(entry=_a[_i],result=Linq4JS.Helper.OrderCompareFunction(entry.ValueSelector,a,b,entry.Direction==Linq4JS.OrderDirection.Descending),result!=0)return result;return 0})};Array.prototype.Move=function(oldIndex,newIndex){var that=this;return that.splice(newIndex,0,that.splice(oldIndex,1)[0]),that};Array.prototype.Distinct=function(valueSelector,takelast){for(var current,next,that=this,valueSelectorFunction=Linq4JS.Helper.ConvertFunction(valueSelector),temp=that.OrderBy(valueSelectorFunction),newArray=[],prev,i=0;i<temp.length;i++)if(current=temp[i],takelast==!0)next=temp[i+1],next!=null?valueSelectorFunction(current)!=valueSelectorFunction(next)&&newArray.Add(current):newArray.Add(current);else if(prev!=null&&valueSelectorFunction(current)==valueSelectorFunction(prev))continue;else newArray.Add(current),prev=current;return newArray};